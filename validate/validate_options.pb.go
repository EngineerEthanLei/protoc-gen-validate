// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.15.6
// source: validate_options.proto

package validate

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FieldValidator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Used for nested message types, requires that the field must exists.
	MustExists *bool `protobuf:"varint,1,opt,name=must_exists,json=mustExists" json:"must_exists,omitempty"`
	// Used for string fields validate
	String_ *ValidateString `protobuf:"bytes,2,opt,name=string" json:"string,omitempty"`
	// Used for integer fields validate
	Integer *ValidateInteger `protobuf:"bytes,3,opt,name=integer" json:"integer,omitempty"`
	// Used for floating fields validate
	Floating *ValidateFloating `protobuf:"bytes,4,opt,name=floating" json:"floating,omitempty"`
}

func (x *FieldValidator) Reset() {
	*x = FieldValidator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldValidator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldValidator) ProtoMessage() {}

func (x *FieldValidator) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldValidator.ProtoReflect.Descriptor instead.
func (*FieldValidator) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{0}
}

func (x *FieldValidator) GetMustExists() bool {
	if x != nil && x.MustExists != nil {
		return *x.MustExists
	}
	return false
}

func (x *FieldValidator) GetString_() *ValidateString {
	if x != nil {
		return x.String_
	}
	return nil
}

func (x *FieldValidator) GetInteger() *ValidateInteger {
	if x != nil {
		return x.Integer
	}
	return nil
}

func (x *FieldValidator) GetFloating() *ValidateFloating {
	if x != nil {
		return x.Floating
	}
	return nil
}

type ValidateError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Used for specifies a user-customizable public error code when validating.
	MainErrorCode *string `protobuf:"bytes,1,opt,name=main_error_code,json=mainErrorCode" json:"main_error_code,omitempty"`
	// Used for specifies a user-customizable private error code when validating.
	OtherErrorCode *string `protobuf:"bytes,2,opt,name=other_error_code,json=otherErrorCode" json:"other_error_code,omitempty"`
	// Used for specifies a user-customizable error msg when validating.
	ErrorMsg *string `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg" json:"error_msg,omitempty"`
}

func (x *ValidateError) Reset() {
	*x = ValidateError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateError) ProtoMessage() {}

func (x *ValidateError) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateError.ProtoReflect.Descriptor instead.
func (*ValidateError) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{1}
}

func (x *ValidateError) GetMainErrorCode() string {
	if x != nil && x.MainErrorCode != nil {
		return *x.MainErrorCode
	}
	return ""
}

func (x *ValidateError) GetOtherErrorCode() string {
	if x != nil && x.OtherErrorCode != nil {
		return *x.OtherErrorCode
	}
	return ""
}

func (x *ValidateError) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

type ValidateString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// requires the string to be not empty (i.e different from "").
	NotEmpty *ValidateStringNotEmpty `protobuf:"bytes,1,opt,name=not_empty,json=notEmpty" json:"not_empty,omitempty"`
	// Field value of length must greater than this value.
	LengthGt *ValidateStringLengthGt `protobuf:"bytes,2,opt,name=length_gt,json=lengthGt" json:"length_gt,omitempty"`
	// Field value of length must smaller than this value.
	LengthLt *ValidateStringLengthLt `protobuf:"bytes,3,opt,name=length_lt,json=lengthLt" json:"length_lt,omitempty"`
	// Field value of length must strictly equal to this value.
	LengthEq *ValidateStringLengthEq `protobuf:"bytes,4,opt,name=length_eq,json=lengthEq" json:"length_eq,omitempty"`
	// Field value of length must not equal to this value.
	LengthNotEq *ValidateStringLengthNotEq `protobuf:"bytes,5,opt,name=length_not_eq,json=lengthNotEq" json:"length_not_eq,omitempty"`
}

func (x *ValidateString) Reset() {
	*x = ValidateString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateString) ProtoMessage() {}

func (x *ValidateString) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateString.ProtoReflect.Descriptor instead.
func (*ValidateString) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{2}
}

func (x *ValidateString) GetNotEmpty() *ValidateStringNotEmpty {
	if x != nil {
		return x.NotEmpty
	}
	return nil
}

func (x *ValidateString) GetLengthGt() *ValidateStringLengthGt {
	if x != nil {
		return x.LengthGt
	}
	return nil
}

func (x *ValidateString) GetLengthLt() *ValidateStringLengthLt {
	if x != nil {
		return x.LengthLt
	}
	return nil
}

func (x *ValidateString) GetLengthEq() *ValidateStringLengthEq {
	if x != nil {
		return x.LengthEq
	}
	return nil
}

func (x *ValidateString) GetLengthNotEq() *ValidateStringLengthNotEq {
	if x != nil {
		return x.LengthNotEq
	}
	return nil
}

type ValidateStringNotEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *bool `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateStringNotEmpty) Reset() {
	*x = ValidateStringNotEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateStringNotEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateStringNotEmpty) ProtoMessage() {}

func (x *ValidateStringNotEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateStringNotEmpty.ProtoReflect.Descriptor instead.
func (*ValidateStringNotEmpty) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{3}
}

func (x *ValidateStringNotEmpty) GetValue() bool {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return false
}

func (x *ValidateStringNotEmpty) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateStringLengthGt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateStringLengthGt) Reset() {
	*x = ValidateStringLengthGt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateStringLengthGt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateStringLengthGt) ProtoMessage() {}

func (x *ValidateStringLengthGt) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateStringLengthGt.ProtoReflect.Descriptor instead.
func (*ValidateStringLengthGt) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{4}
}

func (x *ValidateStringLengthGt) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateStringLengthGt) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateStringLengthLt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateStringLengthLt) Reset() {
	*x = ValidateStringLengthLt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateStringLengthLt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateStringLengthLt) ProtoMessage() {}

func (x *ValidateStringLengthLt) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateStringLengthLt.ProtoReflect.Descriptor instead.
func (*ValidateStringLengthLt) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{5}
}

func (x *ValidateStringLengthLt) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateStringLengthLt) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateStringLengthEq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateStringLengthEq) Reset() {
	*x = ValidateStringLengthEq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateStringLengthEq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateStringLengthEq) ProtoMessage() {}

func (x *ValidateStringLengthEq) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateStringLengthEq.ProtoReflect.Descriptor instead.
func (*ValidateStringLengthEq) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{6}
}

func (x *ValidateStringLengthEq) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateStringLengthEq) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateStringLengthNotEq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateStringLengthNotEq) Reset() {
	*x = ValidateStringLengthNotEq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateStringLengthNotEq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateStringLengthNotEq) ProtoMessage() {}

func (x *ValidateStringLengthNotEq) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateStringLengthNotEq.ProtoReflect.Descriptor instead.
func (*ValidateStringLengthNotEq) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{7}
}

func (x *ValidateStringLengthNotEq) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateStringLengthNotEq) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateInteger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Field value greater to this value.
	Gt *ValidateIntGt `protobuf:"bytes,1,opt,name=gt" json:"gt,omitempty"`
	// Field value smaller to this value.
	Lt *ValidateIntLt `protobuf:"bytes,2,opt,name=lt" json:"lt,omitempty"`
	// Field value equal to this value.
	Eq *ValidateIntEq `protobuf:"bytes,3,opt,name=eq" json:"eq,omitempty"`
	// Field value not equal to this value.
	NotEq *ValidateIntNotEq `protobuf:"bytes,4,opt,name=not_eq,json=notEq" json:"not_eq,omitempty"`
}

func (x *ValidateInteger) Reset() {
	*x = ValidateInteger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateInteger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateInteger) ProtoMessage() {}

func (x *ValidateInteger) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateInteger.ProtoReflect.Descriptor instead.
func (*ValidateInteger) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{8}
}

func (x *ValidateInteger) GetGt() *ValidateIntGt {
	if x != nil {
		return x.Gt
	}
	return nil
}

func (x *ValidateInteger) GetLt() *ValidateIntLt {
	if x != nil {
		return x.Lt
	}
	return nil
}

func (x *ValidateInteger) GetEq() *ValidateIntEq {
	if x != nil {
		return x.Eq
	}
	return nil
}

func (x *ValidateInteger) GetNotEq() *ValidateIntNotEq {
	if x != nil {
		return x.NotEq
	}
	return nil
}

type ValidateIntGt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateIntGt) Reset() {
	*x = ValidateIntGt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateIntGt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateIntGt) ProtoMessage() {}

func (x *ValidateIntGt) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateIntGt.ProtoReflect.Descriptor instead.
func (*ValidateIntGt) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{9}
}

func (x *ValidateIntGt) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateIntGt) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateIntLt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateIntLt) Reset() {
	*x = ValidateIntLt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateIntLt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateIntLt) ProtoMessage() {}

func (x *ValidateIntLt) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateIntLt.ProtoReflect.Descriptor instead.
func (*ValidateIntLt) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{10}
}

func (x *ValidateIntLt) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateIntLt) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateIntEq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateIntEq) Reset() {
	*x = ValidateIntEq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateIntEq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateIntEq) ProtoMessage() {}

func (x *ValidateIntEq) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateIntEq.ProtoReflect.Descriptor instead.
func (*ValidateIntEq) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{11}
}

func (x *ValidateIntEq) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateIntEq) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateIntNotEq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateIntNotEq) Reset() {
	*x = ValidateIntNotEq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateIntNotEq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateIntNotEq) ProtoMessage() {}

func (x *ValidateIntNotEq) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateIntNotEq.ProtoReflect.Descriptor instead.
func (*ValidateIntNotEq) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{12}
}

func (x *ValidateIntNotEq) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateIntNotEq) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateFloating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Field value of double strictly greater than this value.
	// Note that this value can only take on a valid floating point
	// value. Use together with float_epsilon if you need something more specific.
	Gt *ValidateFloatGt `protobuf:"bytes,1,opt,name=gt" json:"gt,omitempty"`
	// Field value of double strictly smaller than this value.
	// Note that this value can only take on a valid floating point
	// value. Use together with float_epsilon if you need something more specific.
	Lt *ValidateFloatLt `protobuf:"bytes,2,opt,name=lt" json:"lt,omitempty"`
	// Floating-point value compared to which the field content should be greater
	// or equal.
	Gte *ValidateFloatGte `protobuf:"bytes,3,opt,name=gte" json:"gte,omitempty"`
	// Floating-point value compared to which the field content should be smaller
	// or equal.
	Lte *ValidateFloatLte `protobuf:"bytes,4,opt,name=lte" json:"lte,omitempty"`
	// Floating-point value compared to which the field content should be equal.
	Eq *ValidateFloatEq `protobuf:"bytes,5,opt,name=eq" json:"eq,omitempty"`
	// Floating-point value compared to which the field content should not be
	// equal.
	NotEq *ValidateFloatNotEq `protobuf:"bytes,6,opt,name=not_eq,json=notEq" json:"not_eq,omitempty"`
}

func (x *ValidateFloating) Reset() {
	*x = ValidateFloating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateFloating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateFloating) ProtoMessage() {}

func (x *ValidateFloating) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateFloating.ProtoReflect.Descriptor instead.
func (*ValidateFloating) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{13}
}

func (x *ValidateFloating) GetGt() *ValidateFloatGt {
	if x != nil {
		return x.Gt
	}
	return nil
}

func (x *ValidateFloating) GetLt() *ValidateFloatLt {
	if x != nil {
		return x.Lt
	}
	return nil
}

func (x *ValidateFloating) GetGte() *ValidateFloatGte {
	if x != nil {
		return x.Gte
	}
	return nil
}

func (x *ValidateFloating) GetLte() *ValidateFloatLte {
	if x != nil {
		return x.Lte
	}
	return nil
}

func (x *ValidateFloating) GetEq() *ValidateFloatEq {
	if x != nil {
		return x.Eq
	}
	return nil
}

func (x *ValidateFloating) GetNotEq() *ValidateFloatNotEq {
	if x != nil {
		return x.NotEq
	}
	return nil
}

type ValidateFloatGt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *float64 `protobuf:"fixed64,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateFloatGt) Reset() {
	*x = ValidateFloatGt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateFloatGt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateFloatGt) ProtoMessage() {}

func (x *ValidateFloatGt) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateFloatGt.ProtoReflect.Descriptor instead.
func (*ValidateFloatGt) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{14}
}

func (x *ValidateFloatGt) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateFloatGt) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateFloatGte struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *float64 `protobuf:"fixed64,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateFloatGte) Reset() {
	*x = ValidateFloatGte{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateFloatGte) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateFloatGte) ProtoMessage() {}

func (x *ValidateFloatGte) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateFloatGte.ProtoReflect.Descriptor instead.
func (*ValidateFloatGte) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{15}
}

func (x *ValidateFloatGte) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateFloatGte) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateFloatLt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *float64 `protobuf:"fixed64,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateFloatLt) Reset() {
	*x = ValidateFloatLt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateFloatLt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateFloatLt) ProtoMessage() {}

func (x *ValidateFloatLt) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateFloatLt.ProtoReflect.Descriptor instead.
func (*ValidateFloatLt) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{16}
}

func (x *ValidateFloatLt) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateFloatLt) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateFloatLte struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *float64 `protobuf:"fixed64,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateFloatLte) Reset() {
	*x = ValidateFloatLte{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateFloatLte) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateFloatLte) ProtoMessage() {}

func (x *ValidateFloatLte) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateFloatLte.ProtoReflect.Descriptor instead.
func (*ValidateFloatLte) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{17}
}

func (x *ValidateFloatLte) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateFloatLte) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateFloatEq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *float64 `protobuf:"fixed64,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateFloatEq) Reset() {
	*x = ValidateFloatEq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateFloatEq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateFloatEq) ProtoMessage() {}

func (x *ValidateFloatEq) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateFloatEq.ProtoReflect.Descriptor instead.
func (*ValidateFloatEq) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{18}
}

func (x *ValidateFloatEq) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateFloatEq) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

type ValidateFloatNotEq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Need Validate?
	Value *float64 `protobuf:"fixed64,1,opt,name=value" json:"value,omitempty"`
	// Used for specifies a user-customizable error when validating.
	CustomError *ValidateError `protobuf:"bytes,2,opt,name=custom_error,json=customError" json:"custom_error,omitempty"`
}

func (x *ValidateFloatNotEq) Reset() {
	*x = ValidateFloatNotEq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validate_options_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateFloatNotEq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateFloatNotEq) ProtoMessage() {}

func (x *ValidateFloatNotEq) ProtoReflect() protoreflect.Message {
	mi := &file_validate_options_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateFloatNotEq.ProtoReflect.Descriptor instead.
func (*ValidateFloatNotEq) Descriptor() ([]byte, []int) {
	return file_validate_options_proto_rawDescGZIP(), []int{19}
}

func (x *ValidateFloatNotEq) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ValidateFloatNotEq) GetCustomError() *ValidateError {
	if x != nil {
		return x.CustomError
	}
	return nil
}

var file_validate_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldValidator)(nil),
		Field:         50000,
		Name:          "validate.field_validator",
		Tag:           "bytes,50000,opt,name=field_validator",
		Filename:      "validate_options.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional validate.FieldValidator field_validator = 50000;
	E_FieldValidator = &file_validate_options_proto_extTypes[0]
)

var File_validate_options_proto protoreflect.FileDescriptor

var file_validate_options_proto_rawDesc = []byte{
	0x0a, 0x16, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x75, 0x73, 0x74, 0x5f,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x75,
	0x73, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x07, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12,
	0x36, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x7e, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xd5, 0x02, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x09, 0x6e, 0x6f,
	0x74, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x08, 0x6e, 0x6f, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x09, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x5f, 0x67, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x47, 0x74, 0x52, 0x08,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x47, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x5f, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x4c, 0x74, 0x52, 0x08, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x4c, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x5f, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x45, 0x71, 0x52, 0x08, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x45, 0x71, 0x12, 0x47, 0x0a, 0x0d, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x4e, 0x6f, 0x74,
	0x45, 0x71, 0x52, 0x0b, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x22,
	0x6a, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x3a, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6a, 0x0a, 0x16, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x47, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6a, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x4c,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x6a, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x45, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x6d, 0x0a, 0x19, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xbf,
	0x01, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x12, 0x27, 0x0a, 0x02, 0x67, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x47, 0x74, 0x52, 0x02, 0x67, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x4c, 0x74,
	0x52, 0x02, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x45, 0x71, 0x52, 0x02, 0x65, 0x71, 0x12, 0x31, 0x0a,
	0x06, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x45, 0x71,
	0x22, 0x61, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x47,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x61, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x74, 0x4c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x61, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x45, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a,
	0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x64, 0x0a, 0x10, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0xa4, 0x02, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x02, 0x67, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x47, 0x74, 0x52, 0x02, 0x67, 0x74, 0x12,
	0x29, 0x0a, 0x02, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x4c, 0x74, 0x52, 0x02, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x67, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x47, 0x74, 0x65, 0x52, 0x03, 0x67, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x03, 0x6c, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x4c, 0x74,
	0x65, 0x52, 0x03, 0x6c, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x02, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x45, 0x71, 0x52, 0x02, 0x65,
	0x71, 0x12, 0x33, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x52,
	0x05, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x22, 0x63, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x47, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x3a, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x64, 0x0a, 0x10, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x47, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x63, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x4c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x64, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x4c, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x63, 0x0a, 0x0f,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x45, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x66, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a,
	0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x3a, 0x62, 0x0a, 0x0f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0e, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x43, 0x5a,
	0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x65, 0x72, 0x45, 0x74, 0x68, 0x61, 0x6e, 0x4c, 0x65, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65,
}

var (
	file_validate_options_proto_rawDescOnce sync.Once
	file_validate_options_proto_rawDescData = file_validate_options_proto_rawDesc
)

func file_validate_options_proto_rawDescGZIP() []byte {
	file_validate_options_proto_rawDescOnce.Do(func() {
		file_validate_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_validate_options_proto_rawDescData)
	})
	return file_validate_options_proto_rawDescData
}

var file_validate_options_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_validate_options_proto_goTypes = []interface{}{
	(*FieldValidator)(nil),            // 0: validate.FieldValidator
	(*ValidateError)(nil),             // 1: validate.ValidateError
	(*ValidateString)(nil),            // 2: validate.ValidateString
	(*ValidateStringNotEmpty)(nil),    // 3: validate.ValidateStringNotEmpty
	(*ValidateStringLengthGt)(nil),    // 4: validate.ValidateStringLengthGt
	(*ValidateStringLengthLt)(nil),    // 5: validate.ValidateStringLengthLt
	(*ValidateStringLengthEq)(nil),    // 6: validate.ValidateStringLengthEq
	(*ValidateStringLengthNotEq)(nil), // 7: validate.ValidateStringLengthNotEq
	(*ValidateInteger)(nil),           // 8: validate.ValidateInteger
	(*ValidateIntGt)(nil),             // 9: validate.ValidateIntGt
	(*ValidateIntLt)(nil),             // 10: validate.ValidateIntLt
	(*ValidateIntEq)(nil),             // 11: validate.ValidateIntEq
	(*ValidateIntNotEq)(nil),          // 12: validate.ValidateIntNotEq
	(*ValidateFloating)(nil),          // 13: validate.ValidateFloating
	(*ValidateFloatGt)(nil),           // 14: validate.ValidateFloatGt
	(*ValidateFloatGte)(nil),          // 15: validate.ValidateFloatGte
	(*ValidateFloatLt)(nil),           // 16: validate.ValidateFloatLt
	(*ValidateFloatLte)(nil),          // 17: validate.ValidateFloatLte
	(*ValidateFloatEq)(nil),           // 18: validate.ValidateFloatEq
	(*ValidateFloatNotEq)(nil),        // 19: validate.ValidateFloatNotEq
	(*descriptorpb.FieldOptions)(nil), // 20: google.protobuf.FieldOptions
}
var file_validate_options_proto_depIdxs = []int32{
	2,  // 0: validate.FieldValidator.string:type_name -> validate.ValidateString
	8,  // 1: validate.FieldValidator.integer:type_name -> validate.ValidateInteger
	13, // 2: validate.FieldValidator.floating:type_name -> validate.ValidateFloating
	3,  // 3: validate.ValidateString.not_empty:type_name -> validate.ValidateStringNotEmpty
	4,  // 4: validate.ValidateString.length_gt:type_name -> validate.ValidateStringLengthGt
	5,  // 5: validate.ValidateString.length_lt:type_name -> validate.ValidateStringLengthLt
	6,  // 6: validate.ValidateString.length_eq:type_name -> validate.ValidateStringLengthEq
	7,  // 7: validate.ValidateString.length_not_eq:type_name -> validate.ValidateStringLengthNotEq
	1,  // 8: validate.ValidateStringNotEmpty.custom_error:type_name -> validate.ValidateError
	1,  // 9: validate.ValidateStringLengthGt.custom_error:type_name -> validate.ValidateError
	1,  // 10: validate.ValidateStringLengthLt.custom_error:type_name -> validate.ValidateError
	1,  // 11: validate.ValidateStringLengthEq.custom_error:type_name -> validate.ValidateError
	1,  // 12: validate.ValidateStringLengthNotEq.custom_error:type_name -> validate.ValidateError
	9,  // 13: validate.ValidateInteger.gt:type_name -> validate.ValidateIntGt
	10, // 14: validate.ValidateInteger.lt:type_name -> validate.ValidateIntLt
	11, // 15: validate.ValidateInteger.eq:type_name -> validate.ValidateIntEq
	12, // 16: validate.ValidateInteger.not_eq:type_name -> validate.ValidateIntNotEq
	1,  // 17: validate.ValidateIntGt.custom_error:type_name -> validate.ValidateError
	1,  // 18: validate.ValidateIntLt.custom_error:type_name -> validate.ValidateError
	1,  // 19: validate.ValidateIntEq.custom_error:type_name -> validate.ValidateError
	1,  // 20: validate.ValidateIntNotEq.custom_error:type_name -> validate.ValidateError
	14, // 21: validate.ValidateFloating.gt:type_name -> validate.ValidateFloatGt
	16, // 22: validate.ValidateFloating.lt:type_name -> validate.ValidateFloatLt
	15, // 23: validate.ValidateFloating.gte:type_name -> validate.ValidateFloatGte
	17, // 24: validate.ValidateFloating.lte:type_name -> validate.ValidateFloatLte
	18, // 25: validate.ValidateFloating.eq:type_name -> validate.ValidateFloatEq
	19, // 26: validate.ValidateFloating.not_eq:type_name -> validate.ValidateFloatNotEq
	1,  // 27: validate.ValidateFloatGt.custom_error:type_name -> validate.ValidateError
	1,  // 28: validate.ValidateFloatGte.custom_error:type_name -> validate.ValidateError
	1,  // 29: validate.ValidateFloatLt.custom_error:type_name -> validate.ValidateError
	1,  // 30: validate.ValidateFloatLte.custom_error:type_name -> validate.ValidateError
	1,  // 31: validate.ValidateFloatEq.custom_error:type_name -> validate.ValidateError
	1,  // 32: validate.ValidateFloatNotEq.custom_error:type_name -> validate.ValidateError
	20, // 33: validate.field_validator:extendee -> google.protobuf.FieldOptions
	0,  // 34: validate.field_validator:type_name -> validate.FieldValidator
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	34, // [34:35] is the sub-list for extension type_name
	33, // [33:34] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_validate_options_proto_init() }
func file_validate_options_proto_init() {
	if File_validate_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_validate_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldValidator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateStringNotEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateStringLengthGt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateStringLengthLt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateStringLengthEq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateStringLengthNotEq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateInteger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateIntGt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateIntLt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateIntEq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateIntNotEq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateFloating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateFloatGt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateFloatGte); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateFloatLt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateFloatLte); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateFloatEq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validate_options_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateFloatNotEq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_validate_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_validate_options_proto_goTypes,
		DependencyIndexes: file_validate_options_proto_depIdxs,
		MessageInfos:      file_validate_options_proto_msgTypes,
		ExtensionInfos:    file_validate_options_proto_extTypes,
	}.Build()
	File_validate_options_proto = out.File
	file_validate_options_proto_rawDesc = nil
	file_validate_options_proto_goTypes = nil
	file_validate_options_proto_depIdxs = nil
}
